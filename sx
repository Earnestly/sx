#!/bin/sh --
# sx - start an xserver

# requires xauth Xorg

cleanup() {
    if [ "$pid" ] && kill -0 "$pid" 2> /dev/null; then
        kill -s TERM "$pid"
        wait "$pid"
        r=$?
    fi

    if ! stty "$stty"; then
        stty sane
    fi

    xauth remove :"$tty"
    exit "${r:-$?}"
}

do_sx() {
    xauth generate "$DISPLAY" MIT-MAGIC-COOKIE-1 trusted timeout 0
    DISPLAY=:$tty "${@:-$cfgdir/sxrc}"
}

unset pid
stty=$(stty -g)
tty=$(tty) || exit
tty=${tty#/dev/}
tty=${tty#tty}

cfgdir=${XDG_CONFIG_HOME:-$HOME/.config}/sx
export XAUTHORITY=${XAUTHORITY:-$HOME/.Xauthority}

mkdir -p "$cfgdir" "${XAUTHORITY%/*}"
touch "$XAUTHORITY"

trap 'cleanup' EXIT

# Xorg will check if its SIGUSR1 disposition is SIG_IGN and use this state to
# reply back to the parent process with SIGUSR1 as an indication it is ready
# to accept connections.
# Taking advantage of this feature allows us to launch our client directly
# from the SIGUSR1 handler and avoid the need to poll for server readiness.
trap 'do_sx' USR1
export DISPLAY=:"$tty"
(trap '' USR1 && exec Xorg "$DISPLAY" -keeptty vt"$tty" -noreset -auth "$XAUTHORITY") & pid=$!
wait "$pid"
